#include "vm/swap.h"
#include "threads/vaddr.h"
#include "devices/block.h"
#include <bitmap.h>

static struct block *swap_block;
static struct bitmap *swap_bitmap;
static size_t swap_size;

void vm_swap_init(){
	swap_block = block_get_role(BLOCK_SWAP);

	swap_size = block_size(swap_block) / (PGSIZE / BLOCK_SECTOR_SIZE);
	swap_bitmap = bitmap_create(swap_size);
	bitmap_set_all(swap_bitmap,true);
}

int vm_swap_out (void *page){
	size_t swap_index = bitmap_scan(swap_bitmap,0,1,true);

	size_t i;
	for(i=0;i<(PGSIZE / BLOCK_SECTOR_SIZE);i++){
		block_write(swap_block,
			swap_index *(PGSIZE / BLOCK_SECTOR_SIZE) + i,
			page + i * BLOCK_SECTOR_SIZE);
	}
	bitmap_set(swap_bitmap,swap_index,false);
	return swap_index;
}
void vm_swap_in (int swap_index, void *page){
	size_t i;
	for(i=0;i<(PGSIZE / BLOCK_SECTOR_SIZE);i++){
		block_read(swap_block,
			swap_index *(PGSIZE / BLOCK_SECTOR_SIZE) + i,
			page + i * BLOCK_SECTOR_SIZE);
	}
	bitmap_set(swap_bitmap,swap_index,true);
}
void vm_swap_free(uint32_t swap_index){
	bitmap_set(swap_bitmap,swap_index,true);
}
